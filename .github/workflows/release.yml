name: Release

on:
  push:
    tags:
      - "*.*.*"

jobs:
  release-app:
    permissions:
      contents: write
    strategy:
      fail-fast: false
      matrix:
        include:
          # TODO: Disable these targets for now, since there is a bug on git-cliff
          # - platform: "macos-latest"
          #   args: "--target aarch64-apple-darwin"
          # - platform: "macos-latest"
          #   args: "--target x86_64-apple-darwin"
          - platform: "ubuntu-latest"
            args: ""
          - platform: "windows-latest"
            args: ""

    runs-on: ${{ matrix.platform }}
    steps:
      - name: Checkout Project
        uses: actions/checkout@v5
        with:
          fetch-depth: 0

      - name: Setup Node
        uses: actions/setup-node@v6
        with:
          node-version: lts/*

      - name: Install Rust stable
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: ${{ matrix.platform == 'macos-latest' && 'aarch64-apple-darwin,x86_64-apple-darwin' || '' }}

      - name: Install Linux dependencies
        if: matrix.platform == 'ubuntu-latest'
        run: |
          sudo apt-get update
          sudo apt-get install -y libwebkit2gtk-4.1-dev libappindicator3-dev librsvg2-dev patchelf libclang-dev xdg-utils

      - name: Install Node dependencies
        run: npm install

      - name: Extract version from tag
        run: echo "VERSION=${GITHUB_REF#refs/tags/}" >> $GITHUB_ENV
        shell: bash

      - name: Update App version
        run: |
          perl -pi -e 's/^version = ".*"/version = "${{ env.VERSION }}"/' src-tauri/Cargo.toml

      - name: Generate changelogs
        uses: orhun/git-cliff-action@v4
        id: changelog
        with:
          config: cliff.toml
          args: --strip header --latest
        env:
          OUTPUT: CHANGELOG.md

      - name: Build && Publish
        uses: tauri-apps/tauri-action@v0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          TAURI_SIGNING_PRIVATE_KEY: ${{ secrets.TAURI_SIGNING_PRIVATE_KEY }}
          APPIMAGE_EXTRACT_AND_RUN: 1
        with:
          tagName: ${{ env.VERSION }}
          releaseName: "v${{ env.VERSION }}"
          releaseBody: "${{ steps.changelog.outputs.content }}"
          releaseDraft: true
          prerelease: false
          args: ${{ matrix.args }}
